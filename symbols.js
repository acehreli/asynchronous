// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'asynchronous.libasync.events', kind: "module", path: './asynchronous/libasync/events.html', attributes: []},
{name: 'asynchronous.events', kind: "module", path: './asynchronous/events.html', attributes: []},
{name: 'asynchronous.events.Callback', kind: "classdeclaration", path: './asynchronous/events/Callback.html', attributes: []},
{name: 'asynchronous.events.Callback.cancel', kind: "functiondeclaration", path: './asynchronous/events/Callback.cancel.html', attributes: ["override"]},
{name: 'asynchronous.events.Callback.cancelled', kind: "functiondeclaration", path: './asynchronous/events/Callback.cancelled.html', attributes: ["const", "override"]},
{name: 'asynchronous.events.EventLoop', kind: "classdeclaration", path: './asynchronous/events/EventLoop.html', attributes: []},
{name: 'asynchronous.events.EventLoop.callAt', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.callAt.html', attributes: ["auto", "final"]},
{name: 'asynchronous.events.EventLoop.callExceptionHandler', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.callExceptionHandler.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.callLater', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.callLater.html', attributes: ["auto", "final"]},
{name: 'asynchronous.events.EventLoop.callSoon', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.callSoon.html', attributes: ["auto", "final"]},
{name: 'asynchronous.events.EventLoop.callSoonThreadSafe', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.callSoonThreadSafe.html', attributes: ["auto", "final"]},
{name: 'asynchronous.events.EventLoop.close', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.close.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.createConnection', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.createConnection.html', attributes: ["auto"]},
{name: 'asynchronous.events.EventLoop.createDatagramEndpoint', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.createDatagramEndpoint.html', attributes: ["auto"]},
{name: 'asynchronous.events.EventLoop.createServer', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.createServer.html', attributes: []},
{name: 'asynchronous.events.EventLoop.createTask', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.createTask.html', attributes: ["auto", "final"]},
{name: 'asynchronous.events.EventLoop.createUnixConnection', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.createUnixConnection.html', attributes: ["auto"]},
{name: 'asynchronous.events.EventLoop.createUnixServer', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.createUnixServer.html', attributes: []},
{name: 'asynchronous.events.EventLoop.defaultExceptionHandler', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.defaultExceptionHandler.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.isClosed', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.isClosed.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.isRunning', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.isRunning.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.runForever', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.runForever.html', attributes: []},
{name: 'asynchronous.events.EventLoop.runUntilComplete', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.runUntilComplete.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.setExceptionHandler', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.setExceptionHandler.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.stop', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.stop.html', attributes: ["final"]},
{name: 'asynchronous.events.EventLoop.time', kind: "functiondeclaration", path: './asynchronous/events/EventLoop.time.html', attributes: []},
{name: 'asynchronous.events.EventLoopPolicy', kind: "classdeclaration", path: './asynchronous/events/EventLoopPolicy.html', attributes: []},
{name: 'asynchronous.events.EventLoopPolicy.getEventLoop', kind: "functiondeclaration", path: './asynchronous/events/EventLoopPolicy.getEventLoop.html', attributes: []},
{name: 'asynchronous.events.EventLoopPolicy.newEventLoop', kind: "functiondeclaration", path: './asynchronous/events/EventLoopPolicy.newEventLoop.html', attributes: []},
{name: 'asynchronous.events.EventLoopPolicy.setEventLoop', kind: "functiondeclaration", path: './asynchronous/events/EventLoopPolicy.setEventLoop.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext', kind: "structdeclaration", path: './asynchronous/events/ExceptionContext.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.callback', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.callback.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.context', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.context.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.future', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.future.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.message', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.message.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.protocol', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.protocol.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.socket', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.socket.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.throwable', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.throwable.html', attributes: []},
{name: 'asynchronous.events.ExceptionContext.transport', kind: "variabledeclaration", path: './asynchronous/events/ExceptionContext.transport.html', attributes: []},
{name: 'asynchronous.events.getEventLoop', kind: "functiondeclaration", path: './asynchronous/events/getEventLoop.html', attributes: []},
{name: 'asynchronous.events.getEventLoopPolicy', kind: "functiondeclaration", path: './asynchronous/events/getEventLoopPolicy.html', attributes: []},
{name: 'asynchronous.events.newEventLoop', kind: "functiondeclaration", path: './asynchronous/events/newEventLoop.html', attributes: []},
{name: 'asynchronous.events.Server', kind: "interfacedeclaration", path: './asynchronous/events/Server.html', attributes: []},
{name: 'asynchronous.events.Server.close', kind: "functiondeclaration", path: './asynchronous/events/Server.close.html', attributes: ["abstract"]},
{name: 'asynchronous.events.Server.waitClosed', kind: "functiondeclaration", path: './asynchronous/events/Server.waitClosed.html', attributes: ["abstract"]},
{name: 'asynchronous.events.setEventLoop', kind: "functiondeclaration", path: './asynchronous/events/setEventLoop.html', attributes: []},
{name: 'asynchronous.events.setEventLoopPolicy', kind: "functiondeclaration", path: './asynchronous/events/setEventLoopPolicy.html', attributes: []},
{name: 'asynchronous.futures', kind: "module", path: './asynchronous/futures.html', attributes: []},
{name: 'asynchronous.futures.Future', kind: "classdeclaration", path: './asynchronous/futures/Future.html', attributes: []},
{name: 'asynchronous.futures.Future.result', kind: "functiondeclaration", path: './asynchronous/futures/Future.result.html', attributes: []},
{name: 'asynchronous.futures.Future.setResult', kind: "functiondeclaration", path: './asynchronous/futures/Future.setResult.html', attributes: []},
{name: 'asynchronous.futures.Future.setResultUnlessCancelled', kind: "functiondeclaration", path: './asynchronous/futures/Future.setResultUnlessCancelled.html', attributes: []},
{name: 'asynchronous.locks', kind: "module", path: './asynchronous/locks.html', attributes: []},
{name: 'asynchronous.locks.BoundedSemaphore', kind: "classdeclaration", path: './asynchronous/locks/BoundedSemaphore.html', attributes: []},
{name: 'asynchronous.locks.Semaphore.acquire', kind: "functiondeclaration", path: './asynchronous/locks/Semaphore.acquire.html', attributes: []},
{name: 'asynchronous.locks.Semaphore.locked', kind: "functiondeclaration", path: './asynchronous/locks/Semaphore.locked.html', attributes: ["property", "const"]},
{name: 'asynchronous.locks.Semaphore.release', kind: "functiondeclaration", path: './asynchronous/locks/Semaphore.release.html', attributes: []},
{name: 'asynchronous.locks.Condition', kind: "classdeclaration", path: './asynchronous/locks/Condition.html', attributes: []},
{name: 'asynchronous.locks.Condition.acquire', kind: "functiondeclaration", path: './asynchronous/locks/Condition.acquire.html', attributes: []},
{name: 'asynchronous.locks.Condition.locked', kind: "functiondeclaration", path: './asynchronous/locks/Condition.locked.html', attributes: ["property", "const"]},
{name: 'asynchronous.locks.Condition.notify', kind: "functiondeclaration", path: './asynchronous/locks/Condition.notify.html', attributes: []},
{name: 'asynchronous.locks.Condition.notifyAll', kind: "functiondeclaration", path: './asynchronous/locks/Condition.notifyAll.html', attributes: []},
{name: 'asynchronous.locks.Condition.release', kind: "functiondeclaration", path: './asynchronous/locks/Condition.release.html', attributes: []},
{name: 'asynchronous.locks.Condition.wait', kind: "functiondeclaration", path: './asynchronous/locks/Condition.wait.html', attributes: []},
{name: 'asynchronous.locks.Condition.waitFor', kind: "functiondeclaration", path: './asynchronous/locks/Condition.waitFor.html', attributes: []},
{name: 'asynchronous.locks.Event', kind: "classdeclaration", path: './asynchronous/locks/Event.html', attributes: []},
{name: 'asynchronous.locks.Event.clear', kind: "functiondeclaration", path: './asynchronous/locks/Event.clear.html', attributes: []},
{name: 'asynchronous.locks.Event.isSet', kind: "functiondeclaration", path: './asynchronous/locks/Event.isSet.html', attributes: ["const"]},
{name: 'asynchronous.locks.Event.set', kind: "functiondeclaration", path: './asynchronous/locks/Event.set.html', attributes: []},
{name: 'asynchronous.locks.Event.wait', kind: "functiondeclaration", path: './asynchronous/locks/Event.wait.html', attributes: []},
{name: 'asynchronous.locks.Lock', kind: "classdeclaration", path: './asynchronous/locks/Lock.html', attributes: []},
{name: 'asynchronous.locks.Lock.acquire', kind: "functiondeclaration", path: './asynchronous/locks/Lock.acquire.html', attributes: []},
{name: 'asynchronous.locks.Lock.locked', kind: "functiondeclaration", path: './asynchronous/locks/Lock.locked.html', attributes: ["property", "const"]},
{name: 'asynchronous.locks.Lock.release', kind: "functiondeclaration", path: './asynchronous/locks/Lock.release.html', attributes: []},
{name: 'asynchronous.locks.Semaphore', kind: "classdeclaration", path: './asynchronous/locks/Semaphore.html', attributes: []},
{name: 'asynchronous.protocols', kind: "module", path: './asynchronous/protocols.html', attributes: []},
{name: 'asynchronous.protocols.BaseProtocol', kind: "interfacedeclaration", path: './asynchronous/protocols/BaseProtocol.html', attributes: []},
{name: 'asynchronous.protocols.BaseProtocol.connectionLost', kind: "functiondeclaration", path: './asynchronous/protocols/BaseProtocol.connectionLost.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.BaseProtocol.connectionMade', kind: "functiondeclaration", path: './asynchronous/protocols/BaseProtocol.connectionMade.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.BaseProtocol.pauseWriting', kind: "functiondeclaration", path: './asynchronous/protocols/BaseProtocol.pauseWriting.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.BaseProtocol.resumeWriting', kind: "functiondeclaration", path: './asynchronous/protocols/BaseProtocol.resumeWriting.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.DatagramProtocol', kind: "interfacedeclaration", path: './asynchronous/protocols/DatagramProtocol.html', attributes: []},
{name: 'asynchronous.protocols.DatagramProtocol.datagramReceived', kind: "functiondeclaration", path: './asynchronous/protocols/DatagramProtocol.datagramReceived.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.DatagramProtocol.errorReceived', kind: "functiondeclaration", path: './asynchronous/protocols/DatagramProtocol.errorReceived.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.Protocol', kind: "interfacedeclaration", path: './asynchronous/protocols/Protocol.html', attributes: []},
{name: 'asynchronous.protocols.Protocol.dataReceived', kind: "functiondeclaration", path: './asynchronous/protocols/Protocol.dataReceived.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.Protocol.eofReceived', kind: "functiondeclaration", path: './asynchronous/protocols/Protocol.eofReceived.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.SubprocessProtocol', kind: "interfacedeclaration", path: './asynchronous/protocols/SubprocessProtocol.html', attributes: []},
{name: 'asynchronous.protocols.SubprocessProtocol.pipeConnectionLost', kind: "functiondeclaration", path: './asynchronous/protocols/SubprocessProtocol.pipeConnectionLost.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.SubprocessProtocol.pipeDataReceived', kind: "functiondeclaration", path: './asynchronous/protocols/SubprocessProtocol.pipeDataReceived.html', attributes: ["abstract"]},
{name: 'asynchronous.protocols.SubprocessProtocol.processExited', kind: "functiondeclaration", path: './asynchronous/protocols/SubprocessProtocol.processExited.html', attributes: ["abstract"]},
{name: 'asynchronous.queues', kind: "module", path: './asynchronous/queues.html', attributes: []},
{name: 'asynchronous.queues.LifoQueue', kind: "classdeclaration", path: './asynchronous/queues/LifoQueue.html', attributes: []},
{name: 'asynchronous.queues.PriorityQueue', kind: "classdeclaration", path: './asynchronous/queues/PriorityQueue.html', attributes: []},
{name: 'asynchronous.queues.Queue', kind: "classdeclaration", path: './asynchronous/queues/Queue.html', attributes: []},
{name: 'asynchronous.queues.Queue.empty', kind: "functiondeclaration", path: './asynchronous/queues/Queue.empty.html', attributes: ["property"]},
{name: 'asynchronous.queues.Queue.full', kind: "functiondeclaration", path: './asynchronous/queues/Queue.full.html', attributes: ["property"]},
{name: 'asynchronous.queues.Queue.get', kind: "functiondeclaration", path: './asynchronous/queues/Queue.get.html', attributes: []},
{name: 'asynchronous.queues.Queue.getNowait', kind: "functiondeclaration", path: './asynchronous/queues/Queue.getNowait.html', attributes: []},
{name: 'asynchronous.queues.Queue.join', kind: "functiondeclaration", path: './asynchronous/queues/Queue.join.html', attributes: []},
{name: 'asynchronous.queues.Queue.maxsize', kind: "functiondeclaration", path: './asynchronous/queues/Queue.maxsize.html', attributes: ["property"]},
{name: 'asynchronous.queues.Queue.put', kind: "functiondeclaration", path: './asynchronous/queues/Queue.put.html', attributes: []},
{name: 'asynchronous.queues.Queue.putNowait', kind: "functiondeclaration", path: './asynchronous/queues/Queue.putNowait.html', attributes: []},
{name: 'asynchronous.queues.Queue.qsize', kind: "functiondeclaration", path: './asynchronous/queues/Queue.qsize.html', attributes: ["property"]},
{name: 'asynchronous.queues.Queue.taskDone', kind: "functiondeclaration", path: './asynchronous/queues/Queue.taskDone.html', attributes: []},
{name: 'asynchronous.queues.QueueEmptyException', kind: "classdeclaration", path: './asynchronous/queues/QueueEmptyException.html', attributes: []},
{name: 'asynchronous.queues.QueueFullException', kind: "classdeclaration", path: './asynchronous/queues/QueueFullException.html', attributes: []},
{name: 'asynchronous.streams', kind: "module", path: './asynchronous/streams.html', attributes: []},
{name: 'asynchronous.streams.IncompleteReadError', kind: "classdeclaration", path: './asynchronous/streams/IncompleteReadError.html', attributes: []},
{name: 'asynchronous.streams.IncompleteReadError.expected', kind: "variabledeclaration", path: './asynchronous/streams/IncompleteReadError.expected.html', attributes: []},
{name: 'asynchronous.streams.IncompleteReadError.partial', kind: "variabledeclaration", path: './asynchronous/streams/IncompleteReadError.partial.html', attributes: []},
{name: 'asynchronous.streams.openConnection', kind: "functiondeclaration", path: './asynchronous/streams/openConnection.html', attributes: ["auto"]},
{name: 'asynchronous.streams.openUnixConnection', kind: "functiondeclaration", path: './asynchronous/streams/openUnixConnection.html', attributes: ["auto"]},
{name: 'asynchronous.streams.startServer', kind: "functiondeclaration", path: './asynchronous/streams/startServer.html', attributes: []},
{name: 'asynchronous.streams.startUnixServer', kind: "functiondeclaration", path: './asynchronous/streams/startUnixServer.html', attributes: []},
{name: 'asynchronous.streams.StreamReaderProtocol', kind: "classdeclaration", path: './asynchronous/streams/StreamReaderProtocol.html', attributes: []},
{name: 'asynchronous.streams.StreamWriter', kind: "classdeclaration", path: './asynchronous/streams/StreamWriter.html', attributes: []},
{name: 'asynchronous.streams.StreamWriter.canWriteEof', kind: "functiondeclaration", path: './asynchronous/streams/StreamWriter.canWriteEof.html', attributes: []},
{name: 'asynchronous.streams.StreamWriter.close', kind: "functiondeclaration", path: './asynchronous/streams/StreamWriter.close.html', attributes: []},
{name: 'asynchronous.streams.StreamWriter.drain', kind: "functiondeclaration", path: './asynchronous/streams/StreamWriter.drain.html', attributes: []},
{name: 'asynchronous.streams.StreamWriter.getExtraInfo', kind: "functiondeclaration", path: './asynchronous/streams/StreamWriter.getExtraInfo.html', attributes: ["auto"]},
{name: 'asynchronous.streams.StreamWriter.transport', kind: "functiondeclaration", path: './asynchronous/streams/StreamWriter.transport.html', attributes: ["property"]},
{name: 'asynchronous.streams.StreamWriter.write', kind: "functiondeclaration", path: './asynchronous/streams/StreamWriter.write.html', attributes: []},
{name: 'asynchronous.streams.StreamWriter.writeEof', kind: "functiondeclaration", path: './asynchronous/streams/StreamWriter.writeEof.html', attributes: []},
{name: 'asynchronous.tasks', kind: "module", path: './asynchronous/tasks.html', attributes: []},
{name: 'asynchronous.tasks.asCompleted', kind: "functiondeclaration", path: './asynchronous/tasks/asCompleted.html', attributes: ["auto"]},
{name: 'asynchronous.tasks.ensureFuture', kind: "functiondeclaration", path: './asynchronous/tasks/ensureFuture.html', attributes: ["auto"]},
{name: 'asynchronous.tasks.GeneratorTask', kind: "classdeclaration", path: './asynchronous/tasks/GeneratorTask.html', attributes: []},
{name: 'asynchronous.tasks.shield', kind: "functiondeclaration", path: './asynchronous/tasks/shield.html', attributes: ["auto"]},
{name: 'asynchronous.tasks.sleep', kind: "functiondeclaration", path: './asynchronous/tasks/sleep.html', attributes: ["auto"]},
{name: 'asynchronous.tasks.Task', kind: "classdeclaration", path: './asynchronous/tasks/Task.html', attributes: []},
{name: 'asynchronous.tasks.Task.cancel', kind: "functiondeclaration", path: './asynchronous/tasks/Task.cancel.html', attributes: ["override"]},
{name: 'asynchronous.tasks.wait', kind: "functiondeclaration", path: './asynchronous/tasks/wait.html', attributes: ["auto"]},
{name: 'asynchronous.tasks.waitFor', kind: "functiondeclaration", path: './asynchronous/tasks/waitFor.html', attributes: ["auto"]},
{name: 'asynchronous.tasks.yieldValue', kind: "functiondeclaration", path: './asynchronous/tasks/yieldValue.html', attributes: []},
{name: 'asynchronous.transports', kind: "module", path: './asynchronous/transports.html', attributes: []},
{name: 'asynchronous.transports.BaseTransport', kind: "interfacedeclaration", path: './asynchronous/transports/BaseTransport.html', attributes: []},
{name: 'asynchronous.transports.BaseTransport.close', kind: "functiondeclaration", path: './asynchronous/transports/BaseTransport.close.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.BaseTransport.getExtraInfo', kind: "functiondeclaration", path: './asynchronous/transports/BaseTransport.getExtraInfo.html', attributes: ["auto", "final"]},
{name: 'asynchronous.transports.DatagramTransport', kind: "interfacedeclaration", path: './asynchronous/transports/DatagramTransport.html', attributes: []},
{name: 'asynchronous.transports.DatagramTransport.abort', kind: "functiondeclaration", path: './asynchronous/transports/DatagramTransport.abort.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.DatagramTransport.sendTo', kind: "functiondeclaration", path: './asynchronous/transports/DatagramTransport.sendTo.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.ReadTransport', kind: "interfacedeclaration", path: './asynchronous/transports/ReadTransport.html', attributes: []},
{name: 'asynchronous.transports.ReadTransport.pauseReading', kind: "functiondeclaration", path: './asynchronous/transports/ReadTransport.pauseReading.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.ReadTransport.resumeReading', kind: "functiondeclaration", path: './asynchronous/transports/ReadTransport.resumeReading.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.Transport', kind: "interfacedeclaration", path: './asynchronous/transports/Transport.html', attributes: []},
{name: 'asynchronous.transports.WriteTransport.abort', kind: "functiondeclaration", path: './asynchronous/transports/WriteTransport.abort.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.WriteTransport.canWriteEof', kind: "functiondeclaration", path: './asynchronous/transports/WriteTransport.canWriteEof.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.WriteTransport.getWriteBufferLimits', kind: "functiondeclaration", path: './asynchronous/transports/WriteTransport.getWriteBufferLimits.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.WriteTransport.getWriteBufferSize', kind: "functiondeclaration", path: './asynchronous/transports/WriteTransport.getWriteBufferSize.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.WriteTransport.setWriteBufferLimits', kind: "functiondeclaration", path: './asynchronous/transports/WriteTransport.setWriteBufferLimits.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.WriteTransport.write', kind: "functiondeclaration", path: './asynchronous/transports/WriteTransport.write.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.WriteTransport.writeEof', kind: "functiondeclaration", path: './asynchronous/transports/WriteTransport.writeEof.html', attributes: ["abstract"]},
{name: 'asynchronous.transports.WriteTransport', kind: "interfacedeclaration", path: './asynchronous/transports/WriteTransport.html', attributes: []},
{name: 'asynchronous.types', kind: "module", path: './asynchronous/types.html', attributes: []},
{name: 'asynchronous.types.CancelledException', kind: "classdeclaration", path: './asynchronous/types/CancelledException.html', attributes: []},
{name: 'asynchronous.types.InvalidStateException', kind: "classdeclaration", path: './asynchronous/types/InvalidStateException.html', attributes: []},
{name: 'asynchronous.types.NotImplementedException', kind: "classdeclaration", path: './asynchronous/types/NotImplementedException.html', attributes: []},
{name: 'asynchronous.types.TimeoutException', kind: "classdeclaration", path: './asynchronous/types/TimeoutException.html', attributes: []},
{name: 'asynchronous', kind: "module", path: './asynchronous.html', attributes: []},
];
